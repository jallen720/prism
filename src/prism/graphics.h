#pragma once

#include <cstdint>
#include "vulkan/vulkan.h"
#include "ctk/memory.h"

namespace prism
{

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Typedefs
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
using GFXCreateSurfaceFn = VkSurfaceKHR (*)(const void *, VkInstance);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Data Structures
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
struct GFXConfig
{
    ctk::List<const char *> requestedExtensionNames;
    ctk::List<const char *> requestedLayerNames;
    const void * createSurfaceFnData;
    GFXCreateSurfaceFn createSurfaceFn;
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Interface
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void
gfxInit(GFXConfig * config);

// void
// gfxDestroy(GFXContext * context);

} // namespace prism
